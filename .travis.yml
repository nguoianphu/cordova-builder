env:
  global:
  - JAVA_HOME=/usr/lib/jvm/java-8-oracle
  - ANDROID_VERSION=26.0.2
  - BUILD_TOOLS_VERSION=26.0.2
  - NODEJS=10
matrix:
  include:
  - os: linux
    sudo: false
    language: android
    android:
      components:
      - tools
      - platform-tools
      - tools
      - build-tools-$BUILD_TOOLS_VERSION
      - android-$ANDROID_VERSION
      - extra-google-google_play_services
      - extra-google-m2repository
      - extra-android-m2repository
    addons:
      apt:
        sources:
        - sourceline: deb http://dl.google.com/linux/chrome/deb/ stable main
          key_url: https://dl-ssl.google.com/linux/linux_signing_key.pub
        packages:
        - oracle-java8-installer
        - oracle-java8-set-default
        - jq
        - gradle
        - google-chrome-stable
    licenses:
    - android-sdk-preview-license-.+
    - android-sdk-license-.+
    - google-gdk-license-.+
  allow_failures:
  - os: osx
    language: objective-c
    osx_image: xcode8.3
before_cache:
- rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
- rm -f  $HOME/.gradle/caches/transforms-1/transforms-1.lock
- rm -rf $HOME/.gradle/caches/3.5/fileHashes/
- rm -rf $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
  - "$HOME/.gradle/caches/"
  - "$HOME/.gradle/wrapper/"
before_install:
- export LANG=en_US.UTF-8
- export CHROME_BIN=google-chrome
- nvm install $NODEJS
- npm install -g phonegap@latest
- mkdir "$ANDROID_HOME/licenses" || true
- echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
- echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
- yes | sdkmanager "platforms;android-27"
# Remove the default www and replace it by your zipped
- rm -rf www
- sudo apt-get install p7zip-full
- 7z x -p${MY_ZIP_PASSWORD} www.zip
- ls -la
script:
- if [[ -d www && "$TRAVIS_OS_NAME" == "linux" ]]; then ./build-android.sh ; fi
before_deploy:
  # Get Date and Git hash for this build
  - export DATE=$(date +'DATE_%Y_%m_%d_%H%M%S')
  - export GIT_COMMIT=COMMIT_$(git log --format=%h -1)
  # Get the App info in config.xml
  - export APP_NAME=$(cat www/config.xml | grep \<name\> | cut -d '>' -f2 | cut -d '<' -f1)
  # - export APP_ID=$(cat www/config.xml | grep widget | grep id | grep version | cut -d '"' -f2)
  - export APP_VERSION_CURRENT=$(cat www/config.xml | grep widget | grep id | grep version | cut -d '"' -f4)
  # - export APP_VERSION=$(echo $APP_VERSION_CURRENT | awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{if(length($NF+1)>length($NF))$(NF-1)++; $NF=sprintf("%0*d", length($NF), ($NF+1)%(10^length($NF))); print}')
  - export APK_NAME=${TRAVIS_TAG:-${APP_NAME}-${APP_VERSION_CURRENT}-${DATE}-${GIT_COMMIT}}
  # - export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)}
  - export TRAVIS_TAG=${TRAVIS_TAG:-${APK_NAME}}
  - git tag ${TRAVIS_TAG// /}
  - git tag -l
  - cp $TRAVIS_BUILD_DIR/platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk  $TRAVIS_BUILD_DIR/platforms/android/app/build/outputs/apk/debug/${APK_NAME// /}.apk
deploy:
  provider: releases
  api_key:
    secure: $YOUR_API_KEY_ENCRYPTED
  file: "$TRAVIS_BUILD_DIR/platforms/android/app/build/outputs/apk/debug/${APK_NAME// /}.apk"
  skip_cleanup: true
  on:
    all_branches: true
