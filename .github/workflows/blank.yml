# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        
    # Runs a single command using the runners shell
    - name: Install tools
      run: |
        sudo npm install -g cordova@latest

    # Runs a set of commands using the runners shell
    - name: Call Cordova builder
      run: |
        cd $GITHUB_WORKSPACE/www
        echo "Adding Platforms"
        cordova platform add android
        cordova platforms ls
        echo "Adding Plugins"
        cordova plugin ls
        echo "Building apk for Android"
        cordova build android
        echo "Built the following apk:"
        cp -vR $GITHUB_WORKSPACE/platforms/android/app/build/outputs/apk/debug/* $GITHUB_WORKSPACE/
        cd $GITHUB_WORKSPACE
        ls -la
    # Runs a set of commands using the runners shell
    - name: Create tag
      run: |
        cd $GITHUB_WORKSPACE
        export DATE=$(date +'DATE_%Y_%m_%d_%H%M%S')
        export GIT_COMMIT=COMMIT_$(git log --format=%h -1)
        export APP_NAME=$(cat www/config.xml | grep \<name\> | cut -d '>' -f2 | cut -d '<' -f1)
        export APP_VERSION_CURRENT=$(cat www/config.xml | grep widget | grep id | grep version | cut -d '"' -f4)
        export APK_NAME=${APP_NAME}-${APP_VERSION_CURRENT}-${DATE}-${GIT_COMMIT}
        export APK_NAME=${APK_NAME// /}
        export TAG=${TAG:-${APK_NAME}}
        git tag ${TAG// /}
        git tag -l
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{env.TAG}}
        files: |
          app-debug.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}